name: CI

on:
    push:
        branches: [ main, develop ]
    pull_request:
        branches: [ main ]

env:
    DOCKER_IMAGE: tifennguillas/social-stats
    BASE_HREF: social-stats

jobs:
    testing:
        runs-on: ubuntu-latest

        steps:
            -   uses: actions/checkout@v2

            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v1

            -   name: Build testing image
                uses: docker/build-push-action@v2
                with:
                    tags: |
                        ${{ env.DOCKER_IMAGE }}
                    context: .
                    file: Dockerfile
                    load: true

            -   name: Run tests and generate coverage report
                run: |
                    docker run ${{ env.DOCKER_IMAGE }} bash -c 'yarn && ng test --no-watch --code-coverage'

            -   name: Create coverage badge
                uses: schneegans/dynamic-badges-action@v1.1.0
                with:
                    auth: ${{ secrets.GIST_SECRET }}
                    gistID: d2e023e4050ea2ad7c5b1506998de8b6
                    filename: social-stats.json
                    label: Coverage
                    message: 100%
                    color: green

    building:
        runs-on: ubuntu-latest
        needs: [testing]
        if: ${{ github.event_name == 'push' }}
        steps:
            -   name: Set env
                run: |
                    echo "RELEASE_VERSION=$(echo ${GITHUB_REF:11})" >> $GITHUB_ENV
            -   uses: actions/checkout@v2

            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v1

            -   name: Login to DockerHub
                uses: docker/login-action@v1
                with:
                    username: ${{ secrets.DOCKERHUB_USERNAME }}
                    password: ${{ secrets.DOCKERHUB_TOKEN }}

            -   name: Build production image
                uses: docker/build-push-action@v2
                with:
                    tags: |
                        ${{ env.DOCKER_IMAGE }}:latest
                        ${{ env.DOCKER_IMAGE }}:${{ env.RELEASE_VERSION }}
                    context: .
                    file: Dockerfile
                    push: true
                    build-args: |
                        APPLICATION_ENV=prod

            -   name: Build dist
                run: |
                    docker run -v ${{ github.workspace }}/dist:/project/dist ${{ env.DOCKER_IMAGE }} bash -c 'ng build --prod --base-href /${{ env.BASE_HREF }}/'

            -   name: GitHub Pages
                uses: crazy-max/ghaction-github-pages@v2.5.0
                with:
                    build_dir: dist/
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
